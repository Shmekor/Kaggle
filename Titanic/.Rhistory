modelFit
modelFit$finalModel
mTraning <- predict(modelFit, trainDS)
confusionMatrix(mTraning, trainDS$Survived)
modelFit <- train(Survived ~ Sex + SexPC, method="lda", data=trainDS)
modelFit
modelFit$finalModel
mTraning <- predict(modelFit, trainDS)
confusionMatrix(mTraning, trainDS$Survived)
modelFit <- train(Survived ~ Sex + SexPC + Pclass, method="lda", data=trainDS)
warnings()
modelFit
modelFit$finalModel
mTraning <- predict(modelFit, trainDS)
confusionMatrix(mTraning, trainDS$Survived)
modelFit <- train(Survived ~ Sex + SexPC, method="nb", data=trainDS)
modelFit
modelFit$finalModel
mTraning <- predict(modelFit, trainDS)
confusionMatrix(mTraning, trainDS$Survived)
trainDS$SPredicted <- mTraning
wrongT <- trainDS[trainDS$Survived != trainDS$SPredicted,]
View(wrongT)
modelFit <- train(Survived ~ Sex + Pclass, method="nb", data=trainDS)
modelFit
modelFit$finalModel
mTraning <- predict(modelFit, trainDS)
confusionMatrix(mTraning, trainDS$Survived)
dataSetP$SexPC <- as.factor(dataSetP$SexPC)
summary(dataSetP$SexPC)
set.seed(32133)
inTrain <- createDataPartition(dataSetP$Survived, p=.75, list = FALSE)
trainDS <- dataSetP[inTrain,]
testDS <- dataSetP[-inTrain,]
modelFit <- train(Survived ~ Sex + SexPC, method="nb", data=trainDS)
modelFit <- train(Survived ~ Sex + SexPC, method="lda", data=trainDS)
warnings()
modelFit <- train(Survived ~ Sex + PclassInt, method="lda", data=trainDS)
modelFit
modelFit$finalModel
mTraning <- predict(modelFit, trainDS)
confusionMatrix(mTraning, trainDS$Survived)
modelFit <- train(Survived ~ Sex + PclassInt + FareG, method="nb", data=trainDS)
modelFit
modelFit$finalModel
mTraning <- predict(modelFit, trainDS)
confusionMatrix(mTraning, trainDS$Survived)
modelFit <- train(Survived ~ Sex + Pclass + FareG, method="nb", data=trainDS)
modelFit
modelFit$finalModel
mTraning <- predict(modelFit, trainDS)
confusionMatrix(mTraning, trainDS$Survived)
modelFit <- train(Survived ~ Sex + Pclass + FareG, method="lssvmRadial", data=trainDS)
modelFit
modelFit$finalModel
mTraning <- predict(modelFit, trainDS)
confusionMatrix(mTraning, trainDS$Survived)
modelFit <- train(Survived ~ Sex + Pclass, method="lssvmRadial", data=trainDS)
modelFit
modelFit <- train(Survived ~ Sex + Pclass, method="lssvmPoly", data=trainDS)
modelFit
modelFit <- train(Survived ~ Sex + Pclass, method="ORFlog", data=trainDS)
modelFit <- train(Survived ~ Sex + Pclass, method="ORFlog", test=testDS, data=trainDS)
modelFit <- train(Survived ~ Sex + Pclass, method="cforest", data=trainDS)
modelFit
modelFit
modelFit$finalModel
mTraning <- predict(modelFit, trainDS)
confusionMatrix(mTraning, trainDS$Survived)
dataSetP$RelativesCount <- dataSetP$SibSp + dataSetP$Parch
set.seed(32133)
inTrain <- createDataPartition(dataSetP$Survived, p=.75, list = FALSE)
trainDS <- dataSetP[inTrain,]
testDS <- dataSetP[-inTrain,]
summary(trainDS)
modelFit <- train(Survived ~ Sex + Pclass + Age + RelativesCount, method="cforest", data=trainDS)
modelFit
modelFit$finalModel
mTraning <- predict(modelFit, trainDS)
confusionMatrix(mTraning, trainDS$Survived)
plot(modelFit$finalModel)
xyplot(modelFit$finalModel)
qplot(modelFit$finalModel)
mTraning <- predict(modelFit, trainDS)
confusionMatrix(mTraning, trainDS$Survived)
modelPredict <- predict(modelFit, testDS)
confusionMatrix(modelPredict, testDS$Survived)
modelFit <- train(Survived ~ Sex + Pclass + AgeGroup + RelativesCount, method="cforest", data=trainDS)
str(modelFit$finalModel)
modelFit
modelFit$finalModel
modelFit$finalModel$importance
?randomForest
mTraning <- predict(modelFit, trainDS)
confusionMatrix(mTraning, trainDS$Survived)
library('party')
randomForest
modelFit <- train(Survived ~ Sex + Pclass + AgeGroup + RelativesCount, method="rf", data=trainDS)
modelFit
modelFit$finalModel
mTraning <- predict(modelFit, trainDS)
confusionMatrix(mTraning, trainDS$Survived)
getTree(modelFit$finalModel,k=2)
modelPredict <- predict(modelFit, testDS)
confusionMatrix(modelPredict, testDS$Survived)
modelFit <- train(Survived ~ Sex + Pclass + AgeGroup + RelativesCount, method="rf", prox=TRUE, data=trainDS)
modelFit
modelFit$finalModel
mTraning <- predict(modelFit, trainDS)
confusionMatrix(mTraning, trainDS$Survived)
modelPredict <- predict(modelFit, testDS)
confusionMatrix(modelPredict, testDS$Survived)
set.seed(32133)
inTrain <- createDataPartition(dataSetP$Survived, p=.75, list = FALSE)
trainDS <- dataSetP[inTrain,]
testDS <- dataSetP[-inTrain,]
mf2 <- train(Survived ~ Sex + Pclass + AgeGroup + RelativesCount, method="glm", data=trainDS)
mf2
mf2$finalModel
predM1 <- predict(modelFit, trainDS)
predM2 <- predict(mf2, trainDS)
qplot(predM1,predM2,colour=Survived,data=trainDS)
predDF <- data.frame(predM1,predM2,Survived=trainDS$Survived)
combModFit <- train(Survived ~.,method="gam",data=predDF)
combPred <- predict(combModFit,predDF)
combPred
confusionMatrix(combPred, trainDS$Survived)
predM1
predM2
combModFit <- train(Survived ~.,method="nb",data=predDF)
combPred <- predict(combModFit,predDF)
confusionMatrix(combPred, trainDS$Survived)
mf3 <- train(Survived ~ Sex + Pclass + AgeGroup + RelativesCount, method="lda", data=trainDS)
predM3 <- predict(mf3, trainDS)
predDF <- data.frame(predM1,predM2,predM3, Survived=trainDS$Survived)
combModFit <- train(Survived ~.,method="nb",data=predDF)
combPred <- predict(combModFit,predDF)
confusionMatrix(combPred, trainDS$Survived)
combModFit <- train(Survived ~.,method="lda",data=predDF)
combPred <- predict(combModFit,predDF)
confusionMatrix(combPred, trainDS$Survived)
mf4 <- train(Survived ~ Sex + Pclass + AgeGroup + RelativesCount, method="fda", data=trainDS)
predM4 <- predict(mf4, trainDS)
predDF <- data.frame(predM1,predM2,predM3,predM4, Survived=trainDS$Survived)
combModFit <- train(Survived ~.,method="lda",data=predDF)
combPred <- predict(combModFit,predDF)
confusionMatrix(combPred, trainDS$Survived)
mf4 <- train(Survived ~ Sex + Pclass + AgeGroup + RelativesCount, method="bag", data=trainDS)
mf4 <- train(Survived ~ Sex + Pclass + AgeGroup + RelativesCount, method="avNNet", data=trainDS)
mf4
predM4 <- predict(mf4, trainDS)
confusionMatrix(predM4, trainDS$Survived)
predDF <- data.frame(predM1,predM2,predM3,predM4, Survived=trainDS$Survived)
combModFit <- train(Survived ~.,method="lda",data=predDF)
combPred <- predict(combModFit,predDF)
confusionMatrix(combPred, trainDS$Survived)
combModFit <- train(Survived ~.,method="nb",data=predDF)
combPred <- predict(combModFit,predDF)
confusionMatrix(combPred, trainDS$Survived)
combModFit <- train(Survived ~.,method="avNNet",data=predDF)
combPred <- predict(combModFit,predDF)
confusionMatrix(combPred, trainDS$Survived)
predM1 <- predict(modelFit, testDS)
predM2 <- predict(mf2, testDS)
predM3 <- predict(mf3, testDS)
predM4 <- predict(mf4, testDS)
confusionMatrix(predM4, testDS$Survived)
predDF <- data.frame(predM1,predM2,predM3,predM4, Survived=testDS$Survived)
combModFit <- train(Survived ~.,method="nb",data=predDF)
combPred <- predict(combModFit,predDF)
confusionMatrix(combPred, testDS$Survived)
formula <- Survived ~ Sex + Pclass + AgeGroup + RelativesCount
formula
formula <- Survived ~ Sex + Pclass + AgeGroup + RelativesCount
formula <- Survived ~ Sex + Pclass + AgeGroup + RelativesCount
mf1 <- train(formula, method="rf", prox=TRUE, data=trainDS)
mf2 <- train(formula, method="multinom", data=trainDS)
mf3 <- train(formula, method="lda", data=trainDS)
mf4 <- train(formula, method="nnet", data=trainDS)
predictOnModel <- function(ds) {
predM1 <- predict(mf1, ds)
predM2 <- predict(mf2, ds)
predM3 <- predict(mf3, ds)
predM4 <- predict(mf4, ds)
data.frame(predM1, predM2, predM3, predM4)
}
predDF <- predictOnModel(trainDS)
predDF$Survived <- trainDS$Survived
combModFit <- train(Survived ~.,method="lda",data=predDF)
compPred <- predict(combModFit, trainDS)
compPred <- predict(combModFit, predDF)
confusionMatrix(combPred, trainDS$Survived)
compPred
trainDS$Survived
confusionMatrix(combPred, trainDS$Survived)
predDF
length(trainDS$Survived))
length(trainDS$Survived)
compPred
length(compPred)
confusionMatrix(combPred, trainDS$Survived)
length(combPred)
length(compPred)
confusionMatrix(compPred, trainDS$Survived)
predDFTest <- predictOnModel(testDS)
combPredTest <- predict(combModFit, testDS)
confusionMatrix(combPredTest, testDS$Survived)
predDF
predDFV <- predDF
predDFV$FF <- predDFV$predM1 + predDFV$predM2 + predDFV$predM3 + predDFV$predM4 - predDFV$Survived
predDFV$FF
predDFV$predM1 <- as.integer(predDFV$predM1)
predDFV$predM2 <- as.integer(predDFV$predM2)
predDFV$predM3 <- as.integer(predDFV$predM3)
predDFV$predM4 <- as.integer(predDFV$predM4)
predDFV$Survived <- as.integer(predDFV$Survived)
predDFV$FF <- predDFV$predM1 + predDFV$predM2 + predDFV$predM3 + predDFV$predM4 - predDFV$Survived
predDFV$FF
predDFV$predM1
predDFV$Survived
predDFV <- predDF
predDFV
predDFV$Survived
!predDFV$Survived
predDFV$predM1 == 1 & predDFV$predM2 == 1 & predDFV$predM3 == 1 & predDFV$predM4 == 1 & predDFV$Survived == 0
predDFV$FF <- predDFV$predM1 == 1 & predDFV$predM2 == 1 & predDFV$predM3 == 1 & predDFV$predM4 == 1 & predDFV$Survived == 0
predDFV$FF
predDFV$FF <- (predDFV$predM1 == 1 & predDFV$predM2 == 1 & predDFV$predM3 == 1 & predDFV$predM4 == 1 & predDFV$Survived == 0) | (predDFV$predM1 == 0 & predDFV$predM2 == 0 & predDFV$predM3 == 0 & predDFV$predM4 == 0 & predDFV$Survived == 1)
predDFV$FF
predDFV
fullFail <- predDFV[predDFV$FF == TRUE,]
predDFV$FF
ffTrain <- trainDS
ffTrain$FF <- (predDFV$predM1 == 1 & predDFV$predM2 == 1 & predDFV$predM3 == 1 & predDFV$predM4 == 1 & predDFV$Survived == 0) | (predDFV$predM1 == 0 & predDFV$predM2 == 0 & predDFV$predM3 == 0 & predDFV$predM4 == 0 & predDFV$Survived == 1)
fullFail <- ffTrain[ffTrain$FF == TRUE,]
View(fullFail)
summary(fullFail)
failCR <- train(formula, method="lda", data=fullFail)
warnings()
failCR <- train(Survived ~ Sex + Pclass, method="lda", data=fullFail)
warnings()
failCR
failCR$finalModel
predDF
predDF$Pclass <- trainDS$Pclass
combModFit <- train(Survived ~.,method="lda",data=predDF)
predDFTrain <- predictOnModel(testDS)
predDFTrain$Pclass <- testDS$Pclass
combPredTest <- predict(combModFit, testDS)
confusionMatrix(combPredTest, testDS$Survived)
combPredTrain <- predict(combModFit, trainDS)
combModFit <- train(Survived ~.,method="lda",data=predDF)
predDF <- predictOnModel(trainDS)
predDF$Survived <- trainDS$Survived
combModFit <- train(Survived ~.,method="lda",data=predDF)
combPredTrain <- predict(combModFit, trainDS)
combPredTrain
trainDS
combModFit
combModFit$finalModel
predDF
combPredTrain <- predict(combModFit, trainDS)
combPredTrain
combPredTrain1 <- predict(combModFit, trainDS)
combModFit$finalModel
combPredTrain <- predict(combModFit, predDF)
combPredTrain
confusionMatrix(combPredTest, testDS$Survived)
confusionMatrix(combPredTrain, trainDS$Survived)
trainFail <- trainDS
trainFail$SPredicted <- combPredTrain
trainFail2 <- trainFail[trainFail$Survived != trainFail$SPredicted,]
View(trainFail2)
formula <- Survived ~ Sex + Pclass + AgeGroup + FareG
mf1 <- train(formula, method="rf", prox=TRUE, data=trainDS)
mf2 <- train(formula, method="multinom", data=trainDS)
mf3 <- train(formula, method="lda", data=trainDS)
mf4 <- train(formula, method="nnet", data=trainDS)
predDF <- predictOnModel(trainDS)
predDF$Survived <- trainDS$Survived
combModFit <- train(Survived ~.,method="lda",data=predDF)
combModFit$finalModel
combPredTrain <- predict(combModFit, predDF)
confusionMatrix(combPredTrain, trainDS$Survived)
formula <- Survived ~ Sex + Pclass
mf1 <- train(formula, method="rf", prox=TRUE, data=trainDS)
mf2 <- train(formula, method="multinom", data=trainDS)
mf3 <- train(formula, method="lda", data=trainDS)
mf4 <- train(formula, method="nnet", data=trainDS)
formula2 <- Survived ~ AgeGroup + FareG
mf5 <- train(formula2, method="rf", prox=TRUE, data=trainDS)
mf6<- train(formula2, method="multinom", data=trainDS)
mf7 <- train(formula2, method="lda", data=trainDS)
mf8 <- train(formula2, method="nnet", data=trainDS)
predictOnModel <- function(ds) {
predM1 <- predict(mf1, ds)
predM2 <- predict(mf2, ds)
predM3 <- predict(mf3, ds)
predM4 <- predict(mf4, ds)
predM5 <- predict(mf5, ds)
predM6 <- predict(mf6, ds)
predM7 <- predict(mf7, ds)
predM8 <- predict(mf8, ds)
data.frame(predM1, predM2, predM3, predM4, predM5, predM6, predM7, predM8)
}
predDF <- predictOnModel(trainDS)
predDF$Survived <- trainDS$Survived
combModFit <- train(Survived ~.,method="lda",data=predDF)
warnings()
combPredTrain <- predict(combModFit, predDF)
confusionMatrix(combPredTrain, trainDS$Survived)
formula <- Survived ~ Sex + Pclass + AgeGroup + Fare
mf1 <- train(formula, method="rf", prox=TRUE, data=trainDS)
mf2 <- train(formula, method="multinom", data=trainDS)
mf3 <- train(formula, method="lda", data=trainDS)
mf4 <- train(formula, method="nnet", data=trainDS)
formula2 <- Survived ~ Pclass + Age + FareG + HasCabin
mf5 <- train(formula2, method="rf", prox=TRUE, data=trainDS)
mf6<- train(formula2, method="multinom", data=trainDS)
mf7 <- train(formula2, method="lda", data=trainDS)
mf8 <- train(formula2, method="nnet", data=trainDS)
predDF <- predictOnModel(trainDS)
predDF$Survived <- trainDS$Survived
combModFit <- train(Survived ~.,method="lda",data=predDF)
combModFit$finalModel
combPredTrain <- predict(combModFit, predDF)
confusionMatrix(combPredTrain, trainDS$Survived)
confusionMatrix(predDF$predM1, trainDS$Survived)
confusionMatrix(predDF$predM2, trainDS$Survived)
confusionMatrix(predDF$predM3, trainDS$Survived)
confusionMatrix(predDF$predM4, trainDS$Survived)
confusionMatrix(predDF$predM5, trainDS$Survived)
confusionMatrix(predDF$predM6, trainDS$Survived)
confusionMatrix(predDF$predM7, trainDS$Survived)
confusionMatrix(predDF$predM8, trainDS$Survived)
predDFTrain <- predictOnModel(testDS)
combPredTest <- predict(combModFit, testDS)
predDFTrain <- predictOnModel(testDS)
predDFTrain
combPredTest <- predict(combModFit, testDS)
combPredTest <- predict(predDFTrain, testDS)
predDFTest <- predictOnModel(testDS)
combPredTest <- predict(combModFit, predDFTest)
confusionMatrix(combPredTest, testDS$Survived)
testKaggle <- read.csv('test.csv')
testKaggle <- prepareData(testKaggle)
predDFKaggle <- predictOnModel(testKaggle)
prepareData <- function(data) {
#data$Survived <- as.factor(data$Survived)
data$Pclass <- as.factor(data$Pclass)
data$Sex <- as.factor(data$Sex)
data[is.na(data$Age),]$Age <- median(data$Age, na.rm=TRUE)
data$AgeGroup <- cut(data$Age, breaks=c((0:6)*10, 100))
if(nrow(data[is.na(data$Fare),]) > 0) {
data[is.na(data$Fare),]$Fare <- median(data$Fare, na.rm=TRUE)
}
data$FareG <- 40
data[data$Fare < 30,]$FareG <- 30
data[data$Fare < 20,]$FareG <- 20
data[data$Fare < 10,]$FareG <- 10
data$FareG <- as.factor(data$FareG)
data$HasCabin <- 0
data[data$Cabin != '',]$HasCabin <- 1
data$HasCabin <- as.factor(data$HasCabin)
data
}
testKaggle <- prepareData(testKaggle)
testKaggle <- read.csv('test.csv')
testKaggle <- prepareData(testKaggle)
predDFKaggle <- predictOnModel(testKaggle)
combPredKaggle <- predict(combModFit, predDFKaggle)
testKaggle$Survived <- combPredKaggle
submit <- data.frame(PassengerId = data$PassengerId, Survived = data$Survived)
submit <- data.frame(PassengerId = testKaggle$PassengerId, Survived = testKaggle$Survived)
write.csv(submit, file = "submit.csv", row.names = FALSE)
formula <- Survived ~ Sex + Pclass + AgeGroup + Fare
mf1 <- train(formula, method="rf", prox=TRUE, data=trainDS)
mf2 <- train(formula, method="nnet", data=trainDS)
formula2 <- Survived ~ Pclass + Age + FareG + HasCabin
mf3 <- train(formula2, method="rf", prox=TRUE, data=trainDS)
mf4 <- train(formula2, method="nnet", data=trainDS)
predictOnModel <- function(ds) {
predM1 <- predict(mf1, ds)
predM2 <- predict(mf2, ds)
predM3 <- predict(mf3, ds)
predM4 <- predict(mf4, ds)
#predM5 <- predict(mf5, ds)
#predM6 <- predict(mf6, ds)
#predM7 <- predict(mf7, ds)
#predM8 <- predict(mf8, ds)
data.frame(predM1, predM2, predM3, predM4)#, predM5, predM6, predM7, predM8)
}
predDF <- predictOnModel(trainDS)
predDF$Survived <- trainDS$Survived
combModFit <- train(Survived ~.,method="lda",data=predDF)
combModFit$finalModel
combPredTrain <- predict(combModFit, predDF)
confusionMatrix(combPredTrain, trainDS$Survived)
predDFTest <- predictOnModel(testDS)
combPredTest <- predict(combModFit, predDFTest)
confusionMatrix(combPredTest, testDS$Survived)
testKaggle <- read.csv('test.csv')
testKaggle <- prepareData(testKaggle)
predDFKaggle <- predictOnModel(testKaggle)
combPredKaggle <- predict(combModFit, predDFKaggle)
testKaggle$Survived <- combPredKaggle
submit <- data.frame(PassengerId = testKaggle$PassengerId, Survived = testKaggle$Survived)
write.csv(submit, file = "submit.csv", row.names = FALSE)
formula <- Survived ~ Sex + Pclass + Fare
mf1 <- train(formula, method="rf", prox=TRUE, data=trainDS)
mf2 <- train(formula, method="nnet", data=trainDS)
formula2 <- Survived ~ Pclass + Age + HasCabin
mf3 <- train(formula2, method="rf", prox=TRUE, data=trainDS)
mf4 <- train(formula2, method="nnet", data=trainDS)
predDF <- predictOnModel(trainDS)
predDF$Survived <- trainDS$Survived
combModFit <- train(Survived ~.,method="lda",data=predDF)
combPredTrain <- predict(combModFit, predDF)
confusionMatrix(combPredTrain, trainDS$Survived)
predDFTest <- predictOnModel(testDS)
combPredTest <- predict(combModFit, predDFTest)
confusionMatrix(combPredTest, testDS$Survived)
mf3 <- train(formula, method="nb", data=trainDS)
warnings()
mf3 <- train(formula, method="lda", data=trainDS)
formula <- Survived ~ Sex + Pclass + Fare
mf1 <- train(formula, method="rf", prox=TRUE, data=trainDS)
mf2 <- train(formula, method="nnet", data=trainDS)
mf3 <- train(formula, method="lda", data=trainDS)
formula2 <- Survived ~ Pclass + Age + FareG
mf4 <- train(formula2, method="rf", prox=TRUE, data=trainDS)
mf5 <- train(formula2, method="nnet", data=trainDS)
mf6 <- train(formula2, method="lda", data=trainDS)
formula3 <- Survived ~ Sex + AgeGroup + HasCabin
mf7 <- train(formula3, method="rf", prox=TRUE, data=trainDS)
mf8 <- train(formula3, method="nnet", data=trainDS)
mf9 <- train(formula3, method="lda", data=trainDS)
predictOnModel <- function(ds) {
predM1 <- predict(mf1, ds)
predM2 <- predict(mf2, ds)
predM3 <- predict(mf3, ds)
predM4 <- predict(mf4, ds)
predM5 <- predict(mf5, ds)
predM6 <- predict(mf6, ds)
predM7 <- predict(mf7, ds)
predM8 <- predict(mf8, ds)
predM9 <- predict(mf9, ds)
data.frame(predM1, predM2, predM3, predM4, predM5, predM6, predM7, predM8, predM9)
}
predDF <- predictOnModel(trainDS)
predDF$Survived <- trainDS$Survived
combModFit <- train(Survived ~.,method="lda",data=predDF)
combPredTrain <- predict(combModFit, predDF)
confusionMatrix(combPredTrain, trainDS$Survived)
predDFTest <- predictOnModel(testDS)
combPredTest <- predict(combModFit, predDFTest)
confusionMatrix(combPredTest, testDS$Survived)
confusionMatrix(predDFTest$predM1, testDS$Survived)
confusionMatrix(combPredTest, testDS$Survived)
confusionMatrix(predDFTest$predM2, testDS$Survived)
confusionMatrix(predDFTest$predM3, testDS$Survived)
confusionMatrix(predDFTest$predM4, testDS$Survived)
confusionMatrix(predDFTest$predM5, testDS$Survived)
confusionMatrix(predDFTest$predM6, testDS$Survived)
confusionMatrix(predDFTest$predM7, testDS$Survived)
confusionMatrix(predDFTest$predM8, testDS$Survived)
confusionMatrix(predDFTest$predM9, testDS$Survived)
formula <- Survived ~ Sex + Pclass + Fare
mf1 <- train(formula, method="rf", prox=TRUE, data=trainDS)
mf2 <- train(formula, method="nnet", data=trainDS)
mf3 <- train(formula, method="lda", data=trainDS)
formula2 <- Survived ~ Sex + Pclass + Fare + Age
mf4 <- train(formula2, method="rf", prox=TRUE, data=trainDS)
mf5 <- train(formula2, method="nnet", data=trainDS)
mf6 <- train(formula2, method="lda", data=trainDS)
formula3 <- Survived ~ Sex + Pclass + FareG + AgeGroup
mf7 <- train(formula3, method="rf", prox=TRUE, data=trainDS)
mf8 <- train(formula3, method="nnet", data=trainDS)
mf9 <- train(formula3, method="lda", data=trainDS)
predDF <- predictOnModel(trainDS)
predDF$Survived <- trainDS$Survived
combModFit <- train(Survived ~.,method="lda",data=predDF)
combModFit$finalModel
combPredTrain <- predict(combModFit, predDF)
confusionMatrix(combPredTrain, trainDS$Survived)
predDFTest <- predictOnModel(testDS)
combPredTest <- predict(combModFit, predDFTest)
confusionMatrix(combPredTest, testDS$Survived)
confusionMatrix(predDFTest$predM9, testDS$Survived)
confusionMatrix(predDFTest$predM8, testDS$Survived)
confusionMatrix(predDFTest$predM7, testDS$Survived)
confusionMatrix(predDFTest$predM6, testDS$Survived)
confusionMatrix(predDFTest$predM5, testDS$Survived)
confusionMatrix(predDFTest$predM4, testDS$Survived)
confusionMatrix(predDFTest$predM3, testDS$Survived)
confusionMatrix(predDFTest$predM2, testDS$Survived)
confusionMatrix(predDFTest$predM1, testDS$Survived)
combModFit <- train(Survived ~.,method="nb",data=predDF)
combModFit$finalModel
predDFTest <- predictOnModel(testDS)
combPredTest <- predict(combModFit, predDFTest)
confusionMatrix(combPredTest, testDS$Survived)
combModFit <- train(Survived ~.,method="rf", prox=TRUE, data=predDF)
combPredTest <- predict(combModFit, predDFTest)
confusionMatrix(combPredTest, testDS$Survived)
testKaggle <- read.csv('test.csv')
testKaggle <- prepareData(testKaggle)
predDFKaggle <- predictOnModel(testKaggle)
combPredKaggle <- predict(combModFit, predDFKaggle)
testKaggle$Survived <- combPredKaggle
submit <- data.frame(PassengerId = testKaggle$PassengerId, Survived = testKaggle$Survived)
write.csv(submit, file = "submit.csv", row.names = FALSE)
